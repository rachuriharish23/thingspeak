// This project implements the simulation of the reading a DHT sensor using an ESP32 
// The source code is available on my git repo at : https://github.com/Bamamou/DHT11_ESP32.git
// the only difference is the sensor, Here; we use a DHT11 while in Platform io we use a DHT22
#include <DHT.h>  
#include <WiFi.h>
#define LED 4
#define DHTPIN 15
#include <HTTPClient.h>
const char* ssid = "Wokwi-GUEST";
const char* password = "";

// Domain Name with full URL Path for HTTP POST Request
const char* serverName = "http://api.thingspeak.com/update";
// write API Key provided by thingspeak
String apiKey = "CU66FDPSM34NXLMY";
// Set up the DHT sensor 
DHT dht(DHTPIN, DHT22);
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  Serial.println("Hello, ESP32!");
  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  while(WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
  pinMode(LED, OUTPUT);

}

void loop() {
  if(WiFi.status()== WL_CONNECTED){
      WiFiClient client;
      HTTPClient http;
      delay(10000); // wait for 10 seconds
     float h = dht.readHumidity();
      float t = dht.readTemperature();
      if (isnan(t)) {
       Serial.println(F("Failed to read from DHT sensor!"));
       return;
      }
      Serial.println("temperatur"+String(t));
      digitalWrite(LED, HIGH);
  delay(500);
  digitalWrite(LED, LOW);

      // Your Domain name with URL path or IP address with path
      http.begin(client, serverName);
      // Specify content-type header
      http.addHeader("Content-Type", "application/x-www-form-urlencoded");
      // Data to send with HTTP POST
      String httpRequestData = "api_key=" + apiKey + "&field1=" + String(t)+ "&field2=" + String(h);          
      // Send HTTP POST request
      int httpResponseCode = http.POST(httpRequestData);
      Serial.print("HTTP Response code: ");
      Serial.println(httpResponseCode);
      http.end();

    }

    else {
      Serial.println("WiFi Disconnected");
    }
  
}
